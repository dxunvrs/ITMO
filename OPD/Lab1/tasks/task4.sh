cd ~/lab0


echo "Подсчитать количество строк содержимого файлов: carvanha, goldeen, sunflora, snorlax, nuzleaf, результат записать в файл в директории /tmp, ошибки доступа перенаправить в файл в директории /tmp"
mkdir tmp
wc -l camerupt0/carvanha camerupt0/goldeen camerupt0/sunflora pichu9/snorlax pichu9/nuzleaf >>tmp/out 2>>tmp/err
echo "Вывод:"
cat tmp/out
echo "Ошибки"
cat tmp/err

echo ""

echo "Вывести четыре первых элемента рекурсивного списка имен и атрибутов файлов в директории lab0, список отсортировать по убыванию размера, подавить вывод ошибок доступа"
# опция -R выводит рекурсивно, -S сортирует по убыванию размера файлов, 2>/dev/null давит вывод ошибок, head -6,
# 6 потому что первые две строки не выводят имя файлов и/или каталогов
# есть проблема с выводом рекурсивного списка, также выводит ещё и каталоги
# идея: перенести все файлы в дополнительный каталог, там прописать ls -lS | head -4
# новая(реализованная) идея: передать ls -lR в grep с паттерном на поиск только файлов, затем в sort отсортировать по размеру(5 столбец),
# в финале head -4
# ls -lRS ./ 2>/dev/null | head -6 <- такой себе вариант
# "^-" означает что первый символ -, -k в sort сортирует по столбцу, -n - сортирует по числовому значению, -r - инверсия сортировки(от большего к меньшему)
ls -lR 2>/dev/null | grep "^-" | sort -k 5 -nr | head -4

echo ""

echo "Рекурсивно вывести содержимое файлов с номерами строк из директории lab0, имя которых заканчивается на '5', строки отсортировать по имени a->z, ошибки доступа не подавлять и не перенаправлять"
# в $(...) записаны пути до ФАЙЛОВ(-p гарантирует это) с 5 на конце, cat выводит их содержимое, sort сортирует по a->z, cat -n нумерует строки
cat $(ls -Rp | grep "5$") | sort | cat -n

echo ""

echo "Вывести список имен файлов в директории camerupt0, список отсортировать по имени a->z, ошибки доступа не подавлять и не перенаправлять"
# -p добавляет к имени каталога /, конвейром перенаправляем в grep, -v инвертирует поиск, то есть все с / не будут отображены (останутся только файлы), 
# ls по умолчанию сортирует по имени, поэтому sort не нужен
# но будет ошибка(((: ls: невозможно открыть каталог 'camerupt0': Отказано в доступе
# можно выдать право на чтение camerupt0 и всё заработает
chmod u+r camerupt0
ls -p camerupt0 | grep -v /
chmod u-r camerupt0

echo ""

echo "Вывести три первых элемента рекурсивного списка имен и атрибутов файлов в директории lab0, начинающихся на символ 'd', список отсортировать по возрастанию даты доступа к файлу, подавить вывод ошибок доступа"
# -R выводит рекурсивно, -utr сортирует по дате доступа(от меньшего к большему), -p добаввляет к имени каталогов /, "^d" - первый символ d, 
# .* - любые символы, [^/]$ - последний символ не / (чтобы каталоги не попались)
ls -Rutrp 2>/dev/null | grep "^d.*[^/]$" | head -3

echo ""

echo "Вывести рекурсивно список имен и атрибутов файлов в директории lab0, содержащих строку "ha", список отсортировать по имени z->a, подавить вывод ошибок доступа"
# -R выводит рекурсивно, grep находит только файлы, следующий grep находит подстроку "ha", sort -r -k 9 сортирует по имени(z->a)
# к сожалению при отсутствии права на чтение у camerupt0 вывод пустой(
chmod u+r camerupt0
ls -lR 2>/dev/null | grep "^-" | grep "ha" | sort -r -k 9
chmod u-r camerupt0